<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

<!-- ②：启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->  
<!---->
<!-- <bean  
    class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">  
</bean>   -->		 
<!--跟踪@ResponseBody 的实现类发现其默认的编码是 iso-8859-1,

解决办法，在spring mvc的配置文件中手工配置bean： 启动Spring MVC的注解功能，完成请求和注解POJO的映射     --> 
	<bean
	class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
			    <ref bean="stringHttpMessageConverter" />
                <ref bean="jsonHttpMessageConverter" />
				<bean class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/html;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
    </bean> 
    
    <bean id="stringHttpMessageConverter" 
          class="org.springframework.http.converter.StringHttpMessageConverter" >
       <property name="supportedMediaTypes">
		<list>
		    <value>text/html;charset=UTF-8</value>
		</list>
	   </property>
    </bean>
    <bean id="jsonHttpMessageConverter" 
          class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
       <property name="supportedMediaTypes">
		<list>
		    <value>text/html;charset=UTF-8</value>
		</list>
	   </property>
    </bean>      
 	<!-- 启动spring mvc的注解功能，完成请求和注解POJO的映射 -->  
   <!--         配置信息转换，将用@responsebody注解的返回值转换为json返回前台，编码为utf-8-->  
    <!-- <bean  class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
        <property name="messageConverters">  
            <list>  
                <bean  
                    class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">  
                    <property name="supportedMediaTypes">  
                        <list>  
                            <value>application/json;charset=UTF-8</value>  
                        </list>  
                    </property>  
                </bean>  
            </list>  
        </property>  
    </bean>  --> 
<!-- 对定义包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能  
 自动扫描且只扫描@Controller 该配置文件只加载除表现层之外的所有bean
 通过exclude-filter 把所有 @Controller注解的表现层控制器组件排除 -->
 <!-- 开启controller注解支持   -->
	<context:component-scan base-package="com.whut" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	  
	<mvc:annotation-driven/>
	 <!-- 当在web.xml 中   DispatcherServlet使用     <url-pattern>/</url-pattern> 映射时，能映射静态资源 -->  
	<!-- 将无法mapping到Controller的path交给default servlet handler处理 
	配置静态资源，直接映射到对应的文件夹，不被DispatcherServlet处理，3.04新增功能，需要重新设置spring-mvc-3.0.xsd-->		
	<mvc:default-servlet-handler/>
	<!-- 静态资源映射   -->
  <mvc:resources mapping="/common/**" location="/common/" />  
  <!--  <mvc:resources mapping="/img/**" location="/img/"/>
  <mvc:resources mapping="/js/**" location="/js/"/>  
    <mvc:resources mapping="/css/**" location="/css/"/>  
  -->   
	 <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->  
	<!-- 定义JSP文件的位置 --> 
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	<!--<property name="viewClass">  
            <value>org.springframework.web.servlet.view.InternalResourceView</value>  
        </property>  --> 
		<property name="prefix" value="/manager/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
    <!-- 配置 文件上传的支持 -->  
    <!-- <bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
	  以字节为单位的最大上传文件的大小  1024*1000=1000k
            <property name="maxUploadSize" value="10240000"/>  
            <property name="resolveLazily" value="true"/>  
            <property name="maxInMemorySize" value="4096"/>
            <property name="defaultEncoding" value="utf-8"/>  
     </bean>  -->

    
    <!-- Support Shiro Annotation -->  
  <!-- <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">    
    <property name="exceptionMappings">    
        <props>    
            <prop key="org.apache.shiro.authz.UnauthorizedException">shiro-test/refuse</prop>  
        </props>    
    </property>    
  </bean>  --> 
<!--
<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"   
                 depends-on="lifecycleBeanPostProcessor"     /> -->
                      
	<!-- 定义无Controller的path<->view直接映射 -->
	<!-- 意思是访问"/"重定向到task  -->
	<mvc:view-controller path="/" view-name="redirect:/task"/>
</beans>
